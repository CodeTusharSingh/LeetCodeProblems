class Solution {
    public List<String> fullJustify(String[] words, int maxWidth) {
        List<String> list = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        List<Integer> ind = new ArrayList<>();
        for (int i = 0; i < words.length; i++) {
            sb.append(words[i]);
            if ((i != words.length - 1) && (sb.length() + words[i + 1].length()) < maxWidth) {
                ind.add(sb.length());
                sb.append(" ");
            } else if ((i != words.length - 1) && (sb.length() + words[i + 1].length()) >= maxWidth) {
                ind.add(sb.length());
                if (ind.size() == 1) {
                    while (sb.length() != maxWidth) {
                        sb.append(" ");
                    }
                } else {
                    int off = 0;
                    while (sb.length() != maxWidth) {
                        sb.insert(ind.get(off), " ");
                        off++;
                        ind.set(off, ind.get(off) + off);
                        if (off == ind.size() - 1) {
                            off = 0;
                        }
                    }
                }
                ind = new ArrayList<>();
                list.add(sb.toString());
                sb.delete(0, sb.length());
            } else if (i == words.length - 1) {
                while (sb.length() != maxWidth) {
                    sb.append(" ");
                }
                list.add(sb.toString());
            }
        }
        return list;
    }
}
