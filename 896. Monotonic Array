class Solution {
    public boolean isMonotonic(int[] nums) {
 Stack<Integer> stk = new Stack<>();
        int chk = 0;
         if(nums.length == 1){
            return true;
        }
        if (nums[0] < nums[1]) {
            chk = 1;
        } else if (nums[0] > nums[1]) {
            chk = 0;
        } else {
            if (nums.length > 2) {
                for (int i = 1; i < nums.length - 1; i++) {
                    if (nums[i] > nums[i + 1]) {
                        chk = 0;
                        break;
                    } else if (nums[i] < nums[i + 1]) {
                        chk = 1;
                        break;
                    }
                }
            } else {
                return true;
            }
        }
        for (int x : nums) {
            if (chk == 0) {
                if (!stk.empty() && stk.peek() >= x) {
                    stk.push(x);
                } else if (stk.empty()) {
                    stk.push(x);
                }
            } else if (chk == 1) {
                if (!stk.empty() && stk.peek() <= x) {
                    stk.push(x);
                } else if (stk.empty()) {
                    stk.push(x);
                }
            }
        }
        return stk.size() == nums.length ? true : false;
    }
}
