class Solution {
    int idx = 0;
    int sum = 0;
    public int subsetXORSum(int[] nums) {
        int[] res = new int[(int) Math.pow(2, nums.length)];
        List<Integer> subset = new ArrayList<>();
        int index = 0;
        calculateSub(nums, res, subset, index);
        return sum;
    }

    public void calculateSub(int[] nums, int[] res, List<Integer> subset, int index) {
        int x = 0;
        for (int i = 0; i < subset.size(); i++) {
            x = x ^ subset.get(i);
        }
        res[idx] = x;
        sum += res[idx];
        idx++;
        for (int i = index; i < nums.length; i++) {
            subset.add(nums[i]);
            calculateSub(nums, res, subset, i + 1);
            subset.remove(subset.size() - 1);
        }
    }
}
