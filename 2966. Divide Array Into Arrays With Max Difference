class Solution {
    public int[][] divideArray(int[] nums, int k) {
        ArrayList<Integer> arr = new ArrayList<>();
        Arrays.sort(nums);
        int x = nums[0];
        arr.add(nums[0]);
        int i = 1;
        while (i < nums.length) {
            if ((nums[i] - x) <= k) {
                arr.add(nums[i]);
            }
            if (arr.size() % 3 == 0) {
                if (i != nums.length - 1) {
                    x = nums[i + 1];
                    arr.add(x);
                    i++;
                }
            }
            i++;
        }
        if (arr.size() % 3 == 0) {
            int[][] nums2 = new int[arr.size() / 3][3];
            int y = 0;
            int w = 0;
            for (int j = 0; j < arr.size(); j++) {
                if (j != 0 && j % 3 == 0) {
                    y++;
                    w = 0;
                } else if (j != 0) {
                    w++;
                }
                nums2[y][w] = arr.get(j);
            }
            return nums2;
        } else {
            return new int[0][0];
        }
    }
}
